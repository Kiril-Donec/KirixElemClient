{"version":3,"file":"static/js/main.2cb1c74b.js","mappings":"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","sources":["src/services/api.ts","src/screens/LoginScreen.tsx","src/components/LetterAvatar.tsx","src/components/PostCard.tsx","src/screens/FeedScreen.tsx","src/screens/ProfileScreen.tsx","src/navigation/index.tsx","App.tsx","index.ts","src/utils/disableWarnings.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst AUTH_API_URL = 'https://api.elemsocial.com';\nconst POSTS_API_URL = 'https://elemsocial.com';\n\n// Create axios instances with base URLs\nconst authApi = axios.create({\n  baseURL: AUTH_API_URL,\n  headers: {\n    'Content-Type': 'multipart/form-data',\n    'api': 'true'\n  }\n});\n\nconst postsApi = axios.create({\n  baseURL: POSTS_API_URL,\n  headers: {\n    'Content-Type': 'multipart/form-data',\n    'api': 'true'\n  }\n});\n\n// Add interceptor to include S-KEY in requests\nauthApi.interceptors.request.use(async (config) => {\n  const sKey = await AsyncStorage.getItem('S-KEY');\n  if (sKey) {\n    config.headers['S-KEY'] = sKey;\n  }\n  return config;\n});\n\n// Add response error handling\nauthApi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    console.error('API Error:', error?.response?.data || error.message);\n    if (error?.response?.status === 401) {\n      // Handle unauthorized error (invalid or expired S-KEY)\n      await AsyncStorage.removeItem('S-KEY');\n      // You might want to trigger a logout here\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Add interceptor to include S-KEY in requests\npostsApi.interceptors.request.use(async (config) => {\n  const sKey = await AsyncStorage.getItem('S-KEY');\n  if (sKey) {\n    config.headers['S-KEY'] = sKey;\n  }\n  return config;\n});\n\n// Add response error handling\npostsApi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    console.error('API Error:', error?.response?.data || error.message);\n    if (error?.response?.status === 401) {\n      // Handle unauthorized error (invalid or expired S-KEY)\n      await AsyncStorage.removeItem('S-KEY');\n      // You might want to trigger a logout here\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface LoginResponse {\n  status: 'success' | 'error';\n  S_KEY: string;\n}\n\nexport interface PostResponse {\n  ID: string;\n  AuthorID: string;\n  Username: string;\n  Name: string;\n  Avatar: string | 'None';\n  UserIcons: string | null;\n  Text: string;\n  Content: string | null;\n  Date: string;\n  Likes: number;\n  Dislikes: number;\n  Liked: 'Liked' | null;\n  Disliked: 'Liked' | null;\n  Comments: number;\n  MyPost: boolean;\n}\n\nexport interface CommentResponse {\n  Name: string;\n  Username: string;\n  Avatar: string | 'None';\n  UserIcons: string | null;\n  Text: string;\n  Date: string;\n}\n\nexport interface ApiResponse {\n  Type: 'Error' | 'Verify';\n  Content: string;\n}\n\nexport interface ProfileData {\n  type: 'user';\n  id: number;\n  name: string;\n  username: string;\n  cover: string | 'None';\n  avatar: string | 'None';\n  description: string | null;\n  posts: number;\n  subscribers: number;\n  subscribed: boolean;\n  create_date: string;\n  icons: string[];\n  subscriptions: number;\n  links_count: number;\n  links: any[] | null;\n  my_profile: boolean;\n  permissions: {\n    posts: boolean;\n    comments: boolean;\n    new_chats: boolean;\n    music_upload: boolean;\n  };\n}\n\n// Helper functions\nexport const getImageUrl = async (path: string | null | undefined): Promise<string> => {\n  if (!path || path === 'None') {\n    return '';\n  }\n  return `https://elemsocial.com/Content/Avatars/${path}`;\n};\n\n// Auth API\nexport const authAPI = {\n  login: async (email: string, password: string): Promise<LoginResponse> => {\n    const formData = new FormData();\n    formData.append('email', email);\n    formData.append('password', password);\n\n    const response = await authApi.post<LoginResponse>('/auth/login', formData);\n    return response.data;\n  },\n};\n\n// Profile API\nexport const profileAPI = {\n  async getProfile(username: string): Promise<ProfileData> {\n    try {\n      const formData = new FormData();\n      formData.append('username', username);\n      \n      const response = await authApi.post('/profile/get', formData, {\n        headers: {\n          'accept': 'application/json, text/plain, */*',\n          'api': 'true',\n          'content-type': 'multipart/form-data',\n          'priority': 'u=1, i'\n        }\n      });\n      \n      if (response.data.status === 'success') {\n        return response.data.data;\n      }\n      throw new Error('Failed to fetch profile data');\n    } catch (error) {\n      console.error('getProfile error:', error);\n      throw error;\n    }\n  },\n\n  async getMyProfile(): Promise<ProfileData> {\n    try {\n      const response = await authApi.get('/profile');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting profile:', error);\n      throw error;\n    }\n  },\n\n  updateProfile: async (data: Partial<ProfileData>): Promise<ApiResponse> => {\n    const formData = new FormData();\n    Object.entries(data).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        formData.append(key, String(value));\n      }\n    });\n    const response = await postsApi.post<ApiResponse>('/System/API/Connect.php', formData);\n    return response.data;\n  },\n\n  uploadAvatar: async (file: File): Promise<ApiResponse> => {\n    const formData = new FormData();\n    formData.append('avatar', file);\n    const response = await postsApi.post<ApiResponse>('/System/API/Connect.php', formData);\n    return response.data;\n  },\n\n  uploadCover: async (file: File): Promise<ApiResponse> => {\n    const formData = new FormData();\n    formData.append('cover', file);\n    const response = await postsApi.post<ApiResponse>('/System/API/Connect.php', formData);\n    return response.data;\n  },\n};\n\n// Posts API\nexport const postsAPI = {\n  // Load single post\n  loadPost: async (postId: string): Promise<PostResponse> => {\n    const formData = new FormData();\n    formData.append('PostID', postId);\n\n    const response = await postsApi.post('/System/API/LoadPost.php', formData);\n    return response.data;\n  },\n\n  // Create post\n  createPost: async (\n    text: string,\n    files: File[] = [],\n    clearMetadata = false,\n    censoring = false\n  ): Promise<ApiResponse> => {\n    const formData = new FormData();\n    formData.append('Text', text);\n    \n    // Добавляем файлы в Files[]\n    files.forEach(file => {\n      formData.append('Files[]', file);\n    });\n\n    if (clearMetadata) {\n      formData.append('ClearMetadataIMG', 'true');\n    }\n    if (censoring) {\n      formData.append('CensoringIMG', 'true');\n    }\n\n    const response = await postsApi.post<ApiResponse>('/System/API/AddPost.php', formData);\n    return response.data;\n  },\n\n  // Get single post\n  getPost: async (postId: string): Promise<PostResponse> => {\n    const formData = new FormData();\n    formData.append('PostID', postId);\n\n    const response = await postsApi.post<PostResponse>('/System/API/LoadPost.php', formData);\n    return response.data;\n  },\n\n  getPosts: async (type: 'LATEST' | 'REC' | 'SUBSCRIPTIONS', startIndex?: number): Promise<PostResponse[]> => {\n    try {\n      const formData = new FormData();\n      formData.append('StartIndex', startIndex?.toString() || '0');\n\n      const url = `/System/API/LoadPosts.php?F=${type}`;\n      console.log('Making request to:', url);\n      console.log('With FormData:', {\n        StartIndex: startIndex?.toString() || '0'\n      });\n\n      const response = await postsApi.post(url, formData);\n      console.log(`${type} posts raw response:`, response.data);\n\n      // Ensure we have an array of posts\n      const postsArray = Array.isArray(response.data) ? response.data : [];\n      console.log('Posts array length:', postsArray.length);\n\n      // Map and validate each post\n      const posts = postsArray.map(post => ({\n        ID: String(post.ID || ''),\n        AuthorID: String(post.AuthorID || ''),\n        Username: String(post.Username || ''),\n        Name: String(post.Name || ''),\n        Avatar: post.Avatar || 'None',\n        UserIcons: post.UserIcons || null,\n        Text: String(post.Text || ''),\n        Content: post.Content || null,\n        Date: String(post.Date || ''),\n        Likes: Number(post.Likes) || 0,\n        Dislikes: Number(post.Dislikes) || 0,\n        Liked: post.Liked || null,\n        Disliked: post.Disliked || null,\n        Comments: Number(post.Comments) || 0,\n        MyPost: Boolean(post.MyPost)\n      }));\n      \n      return posts;\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      if (axios.isAxiosError(error)) {\n        console.error('Response:', error.response?.data);\n        console.error('Status:', error.response?.status);\n        console.error('Headers:', error.response?.headers);\n      }\n      return [];\n    }\n  },\n\n  getUserPosts: async (userId: string, startIndex?: number): Promise<PostResponse[]> => {\n    try {\n      const formData = new FormData();\n      formData.append('UserID', userId);\n      if (startIndex !== undefined) {\n        formData.append('StartIndex', startIndex.toString());\n      }\n\n      const url = '/System/API/LoadPosts.php?F=USER';\n      console.log('Fetching user posts, UserID:', userId, 'StartIndex:', startIndex);\n      \n      const response = await postsApi.post<any>(url, formData);\n      console.log('User posts raw response:', response.data);\n\n      // Ensure we have an array of posts\n      const postsArray = Array.isArray(response.data) ? response.data : [];\n\n      // Map and validate each post\n      const posts = postsArray.map(post => ({\n        ID: String(post.ID || ''),\n        AuthorID: String(post.AuthorID || ''),\n        Username: String(post.Username || ''),\n        Name: String(post.Name || ''),\n        Avatar: post.Avatar || 'None',\n        UserIcons: post.UserIcons || null,\n        Text: String(post.Text || ''),\n        Content: post.Content || null,\n        Date: String(post.Date || ''),\n        Likes: Number(post.Likes) || 0,\n        Dislikes: Number(post.Dislikes) || 0,\n        Liked: post.Liked || null,\n        Disliked: post.Disliked || null,\n        Comments: Number(post.Comments) || 0,\n        MyPost: Boolean(post.MyPost)\n      }));\n      \n      console.log('User posts processed:', posts);\n      return posts;\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n      return [];\n    }\n  },\n\n  // Post interactions (like, dislike, delete)\n  interactWithPost: async (\n    action: 'LIKE' | 'DISLIKE' | 'DELETE',\n    postId: string\n  ): Promise<ApiResponse> => {\n    const formData = new FormData();\n    formData.append('PostID', postId);\n\n    const response = await postsApi.post<ApiResponse>(`/System/API/PostInteraction.php?F=${action}`, formData);\n    return response.data;\n  },\n\n  // Add comment to post\n  addComment: async (postId: string, text: string): Promise<ApiResponse> => {\n    const formData = new FormData();\n    formData.append('PostID', postId);\n    formData.append('Text', text);\n\n    const response = await postsApi.post<ApiResponse>('/System/API/PostInteraction.php?F=POST_COMMENT', formData);\n    return response.data;\n  },\n\n  // Get post comments\n  getComments: async (postId: string): Promise<CommentResponse[]> => {\n    const formData = new FormData();\n    formData.append('PostID', postId);\n\n    const response = await postsApi.post<CommentResponse[]>('/System/API/PostInteraction.php?F=LOAD_COMMENT', formData);\n    return response.data;\n  },\n};\n","import React, { useState, useContext } from 'react';\nimport {\n  View,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n  Platform,\n} from 'react-native';\nimport { authAPI } from '../services/api';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { CommonActions, useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../navigation';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    textAlign: 'center',\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    fontSize: 16,\n    backgroundColor: '#fff',\n    ...(Platform.OS === 'web' && {\n      outlineStyle: 'none',\n      ':focus': {\n        borderColor: '#007AFF',\n      },\n    }),\n  },\n  buttonContainer: {\n    pointerEvents: 'auto',\n  },\n  button: {\n    height: 50,\n    backgroundColor: '#007AFF',\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: '#0056b3',\n      },\n    }),\n  },\n  buttonDisabled: {\n    backgroundColor: '#ccc',\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n\nconst LoginScreen = () => {\n  const navigation = useNavigation();\n  const { setIsLoggedIn } = useContext(AuthContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async () => {\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!email) {\n      Alert.alert('Ошибка', 'Введите почту');\n      return;\n    }\n    if (!emailRegex.test(email)) {\n      Alert.alert('Ошибка', 'Введите корректный email адрес');\n      return;\n    }\n    if (!password) {\n      Alert.alert('Ошибка', 'Введите пароль');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      console.log('Attempting login with email:', email);\n      const response = await authAPI.login(email.trim(), password);\n      console.log('Login response:', response);\n      \n      if (response?.status === 'success' && response?.S_KEY) {\n        console.log('Login successful, storing S-KEY...');\n        await AsyncStorage.setItem('S-KEY', response.S_KEY);\n        setIsLoggedIn(true);\n      } else {\n        console.log('Invalid credentials');\n        Alert.alert('Ошибка', 'Неверный email или пароль');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      Alert.alert('Ошибка', 'Что-то пошло не так');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Sigma Element Client</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Электронная почта\"\n        value={email}\n        onChangeText={setEmail}\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        editable={!loading}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Пароль\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        editable={!loading}\n      />\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={[styles.button, loading && styles.buttonDisabled]}\n          onPress={handleLogin}\n          disabled={loading}\n        >\n          {loading ? (\n            <ActivityIndicator color=\"white\" />\n          ) : (\n            <Text style={styles.buttonText}>Войти</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\n// Предопределенные цветовые пары (фон и текст)\nconst colorPairs = [\n  { bg: '#FFE5E5', text: '#FF4D4D' }, // Красный\n  { bg: '#E5F1FF', text: '#3399FF' }, // Синий\n  { bg: '#E5FFE5', text: '#33CC33' }, // Зеленый\n  { bg: '#FFE5FF', text: '#FF33FF' }, // Розовый\n  { bg: '#FFF0E5', text: '#FF8533' }, // Оранжевый\n  { bg: '#E5F9FF', text: '#33CCFF' }, // Голубой\n  { bg: '#F2E5FF', text: '#9933FF' }, // Фиолетовый\n  { bg: '#FFFFE5', text: '#CCCC33' }, // Желтый\n];\n\ninterface LetterAvatarProps {\n  name: string;\n  size?: number;\n  style?: any;\n}\n\nconst LetterAvatar: React.FC<LetterAvatarProps> = ({ name, size = 120, style }) => {\n  // Получаем первую букву имени, если имя пустое используем \"?\"\n  const letter = (name?.charAt(0) || '?').toUpperCase();\n  \n  // Выбираем цветовую пару на основе имени\n  const colorIndex = Math.abs(name.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0)) % colorPairs.length;\n  const colors = colorPairs[colorIndex];\n\n  const styles = StyleSheet.create({\n    container: {\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: colors.bg,\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n    },\n    letter: {\n      color: colors.text,\n      fontSize: size * 0.4,\n      fontWeight: '600',\n      textAlign: 'center',\n      textAlignVertical: 'center',\n    },\n  });\n\n  return (\n    <View style={[styles.container, style]}>\n      <Text style={styles.letter}>{letter}</Text>\n    </View>\n  );\n};\n\nexport default LetterAvatar;\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  Animated,\n  Modal,\n  Alert,\n  Platform,\n  ActivityIndicator,\n  Dimensions,\n} from 'react-native';\nimport {\n  PostResponse, postsAPI, getImageUrl\n} from '../services/api';\nimport LetterAvatar from './LetterAvatar';\nimport { format } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { Video, ResizeMode } from 'expo-av';\n\ninterface PostCardProps {\n  post: PostResponse;\n  onUpdate: () => void;\n}\n\ninterface MediaContent {\n  Image?: {\n    simple_image?: string;\n    file_name: string;\n    width: number;\n    height: number;\n    orig_name?: string;\n  };\n  Video?: {\n    file_name: string;\n    width: number;\n    height: number;\n    orig_name?: string;\n  };\n}\n\ninterface MediaViewerProps {\n  url: string;\n  type: 'image' | 'video';\n  onClose: () => void;\n  onDownload: (url: string, filename: string) => void;\n  filename: string;\n}\n\nconst PostCard: React.FC<PostCardProps> = ({ post, onUpdate }) => {\n  const [loadingAction, setLoadingAction] = useState<'LIKE' | 'DISLIKE' | null>(null);\n  const [localLikes, setLocalLikes] = useState(post.Likes);\n  const [localDislikes, setLocalDislikes] = useState(post.Dislikes);\n  const [localLiked, setLocalLiked] = useState(post.Liked);\n  const [localDisliked, setLocalDisliked] = useState(post.Disliked);\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [scaleAnim] = useState(new Animated.Value(1));\n  const [modalVisible, setModalVisible] = useState(false);\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const [mediaViewerProps, setMediaViewerProps] = useState<MediaViewerProps | null>(null);\n  const videoRef = useRef(null);\n\n  const handleDownload = (url: string, filename: string) => {\n    try {\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Error downloading file:', error);\n      Alert.alert('Ошибка', 'Не удалось скачать файл');\n    }\n  };\n\n  const openModal = (props: MediaViewerProps) => {\n    setMediaViewerProps(props);\n    setModalVisible(true);\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const closeModal = () => {\n    Animated.timing(fadeAnim, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: true,\n    }).start(() => {\n      setModalVisible(false);\n      setMediaViewerProps(null);\n    });\n  };\n\n  const formatDate = useCallback((dateString: string) => {\n    const date = new Date(dateString);\n    return format(date, 'dd MMMM, HH:mm', { locale: ru });\n  }, []);\n\n  const handleInteraction = async (action: 'LIKE' | 'DISLIKE') => {\n    if (loadingAction) return;\n    \n    try {\n      setLoadingAction(action);\n      \n      // Оптимистично обновляем UI\n      if (action === 'LIKE') {\n        if (!localLiked) {\n          setLocalLikes(prev => prev + 1);\n          setLocalLiked('Liked');\n          if (localDisliked) {\n            setLocalDislikes(prev => prev - 1);\n            setLocalDisliked(null);\n          }\n        } else {\n          setLocalLikes(prev => prev - 1);\n          setLocalLiked(null);\n        }\n      } else {\n        if (!localDisliked) {\n          setLocalDislikes(prev => prev + 1);\n          setLocalDisliked('Liked');\n          if (localLiked) {\n            setLocalLikes(prev => prev - 1);\n            setLocalLiked(null);\n          }\n        } else {\n          setLocalDislikes(prev => prev - 1);\n          setLocalDisliked(null);\n        }\n      }\n\n      await postsAPI.interactWithPost(action, post.ID);\n      onUpdate();\n    } catch (error) {\n      console.error('Error interacting with post:', error);\n      setLocalLikes(post.Likes);\n      setLocalDislikes(post.Dislikes);\n      setLocalLiked(post.Liked);\n      setLocalDisliked(post.Disliked);\n      Alert.alert('Ошибка', 'Не удалось выполнить действие');\n    } finally {\n      setLoadingAction(null);\n    }\n  };\n\n  const handleReactionPress = useCallback((type: 'like' | 'dislike') => {\n    // Анимация нажатия\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.95,\n        duration: 100,\n        useNativeDriver: false,\n      }),\n      Animated.spring(scaleAnim, {\n        toValue: 1,\n        friction: 4,\n        useNativeDriver: false,\n      }),\n    ]).start();\n\n    if (type === 'like') {\n      handleInteraction('LIKE');\n    } else {\n      handleInteraction('DISLIKE');\n    }\n  }, [scaleAnim, handleInteraction]);\n\n  const renderMediaContent = () => {\n    if (!post.Content) return null;\n\n    try {\n      const content: MediaContent = JSON.parse(post.Content);\n      const screenWidth = Dimensions.get('window').width - 30;\n\n      if (content.Image) {\n        const aspectRatio = content.Image.width / content.Image.height;\n        const imageHeight = screenWidth / aspectRatio;\n        const maxHeight = screenWidth * 0.8;\n\n        const imageUrl = content.Image.simple_image\n          ? `https://elemsocial.com/Content/Simple/${content.Image.simple_image}`\n          : `https://elemsocial.com/Content/Posts/Images/${content.Image.file_name}`;\n        \n        const filename = content.Image.orig_name || content.Image.file_name;\n\n        return (\n          <TouchableOpacity\n            onPress={() => openModal({\n              url: imageUrl,\n              type: 'image',\n              filename,\n              onClose: closeModal,\n              onDownload: handleDownload\n            })}\n            style={[styles.mediaContainer, { height: Math.min(imageHeight, maxHeight) }]}\n          >\n            <Image\n              source={{ uri: imageUrl }}\n              style={styles.mediaContent}\n              resizeMode=\"contain\"\n            />\n          </TouchableOpacity>\n        );\n      }\n\n      if (content.Video) {\n        const aspectRatio = content.Video.width / content.Video.height;\n        const videoHeight = screenWidth / aspectRatio;\n        const maxHeight = screenWidth * 0.8;\n        const videoUrl = `https://elemsocial.com/Content/Posts/Video/${content.Video.file_name}`;\n        const filename = content.Video.orig_name ?? content.Video.file_name;\n\n        return (\n          <TouchableOpacity\n            onPress={() => {\n              if (content.Video) {\n                openModal({\n                  url: videoUrl,\n                  type: 'video',\n                  filename,\n                  onClose: closeModal,\n                  onDownload: handleDownload\n                });\n              }\n            }}\n            style={[styles.mediaContainer, { height: Math.min(videoHeight, maxHeight) }]}\n          >\n            <Video\n              ref={videoRef}\n              source={{ uri: videoUrl }}\n              style={styles.mediaContent}\n              resizeMode={ResizeMode.CONTAIN}\n              useNativeControls\n              shouldPlay={false}\n              isLooping\n            />\n          </TouchableOpacity>\n        );\n      }\n    } catch (error) {\n      console.error('Error parsing content:', error);\n      return null;\n    }\n\n    return null;\n  };\n\n  const renderMediaViewer = () => {\n    if (!mediaViewerProps) return null;\n\n    return (\n      <Modal\n        transparent\n        visible={modalVisible}\n        onRequestClose={closeModal}\n      >\n        <Animated.View \n          style={[\n            styles.modalOverlay,\n            {\n              opacity: fadeAnim,\n            },\n          ]}\n        >\n          <TouchableOpacity\n            style={styles.modalContent}\n            activeOpacity={1}\n            onPress={closeModal}\n          >\n            {mediaViewerProps.type === 'image' ? (\n              <Image\n                source={{ uri: mediaViewerProps.url }}\n                style={styles.fullScreenMedia}\n                resizeMode=\"contain\"\n              />\n            ) : (\n              <Video\n                ref={videoRef}\n                source={{ uri: mediaViewerProps.url }}\n                style={styles.fullScreenMedia}\n                resizeMode={ResizeMode.CONTAIN}\n                useNativeControls\n                shouldPlay={true}\n                isLooping\n              />\n            )}\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.closeButton}\n            onPress={closeModal}\n          >\n            <Text style={styles.closeButtonText}>✕</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.downloadButton}\n            onPress={() => mediaViewerProps.onDownload(mediaViewerProps.url, mediaViewerProps.filename)}\n          >\n            <Image\n              source={require('../assets/download.png')}\n              style={styles.downloadIcon}\n            />\n          </TouchableOpacity>\n        </Animated.View>\n      </Modal>\n    );\n  };\n\n  useEffect(() => {\n    if (post.Avatar && post.Avatar !== 'None') {\n      loadAvatar();\n    }\n  }, [post.Avatar]);\n\n  const loadAvatar = async () => {\n    try {\n      if (post.Avatar && post.Avatar !== 'None') {\n        const url = await getImageUrl(post.Avatar);\n        setAvatarUrl(url);\n      }\n    } catch (error) {\n      console.error('Error loading avatar:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.userInfo}>\n          <View style={styles.avatarContainer}>\n            {avatarUrl ? (\n              <Image\n                source={{ uri: avatarUrl }}\n                style={styles.avatar}\n              />\n            ) : (\n              <LetterAvatar name={post.Name || post.Username} size={40} />\n            )}\n          </View>\n          <View style={styles.userTextInfo}>\n            <View style={styles.nameContainer}>\n              <Text style={styles.name}>{post.Name}</Text>\n              {post.UserIcons && post.UserIcons.includes('VERIFY') && (\n                <Image\n                  source={require('../assets/verify.png')}\n                  style={styles.verifiedBadge}\n                />\n              )}\n            </View>\n            <Text style={styles.username}>@{post.Username}</Text>\n          </View>\n        </TouchableOpacity>\n        <Text style={styles.date}>{formatDate(post.Date)}</Text>\n      </View>\n\n      <Text style={styles.text}>{post.Text}</Text>\n\n      {renderMediaContent()}\n      {renderMediaViewer()}\n\n      <View style={styles.footer}>\n        <Animated.View style={[\n          styles.reactions, \n          { transform: [{ scale: scaleAnim }] },\n          loadingAction ? styles.pointerEventsNone : styles.pointerEventsAuto\n        ]}>\n          <TouchableOpacity\n            style={[styles.reactionButton, localLiked && styles.reactionButtonActive]}\n            onPress={() => handleReactionPress('like')}\n          >\n            <Image\n              source={require('../assets/like.png')}\n              style={styles.reactionIcon}\n              tintColor={localLiked ? '#007AFF' : '#666'}\n              resizeMode=\"contain\"\n            />\n            <Text style={[styles.reactionCount, localLiked && styles.reactionCountActive]}>\n              {localLikes}\n            </Text>\n            {loadingAction === 'LIKE' && (\n              <Animated.View style={styles.reactionLoader}>\n                <ActivityIndicator\n                  size=\"small\"\n                  color={localLiked ? '#007AFF' : '#666'}\n                />\n              </Animated.View>\n            )}\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={[styles.reactionButton, localDisliked && styles.dislikeButtonActive]}\n            onPress={() => handleReactionPress('dislike')}\n          >\n            <Image\n              source={require('../assets/dislike.png')}\n              style={styles.reactionIcon}\n              tintColor={localDisliked ? '#FF3B30' : '#666'}\n              resizeMode=\"contain\"\n            />\n            <Text style={[styles.reactionCount, localDisliked && styles.dislikeCountActive]}>\n              {localDislikes}\n            </Text>\n            {loadingAction === 'DISLIKE' && (\n              <Animated.View style={styles.reactionLoader}>\n                <ActivityIndicator\n                  size=\"small\"\n                  color={localDisliked ? '#FF3B30' : '#666'}\n                />\n              </Animated.View>\n            )}\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.reactionButton}\n          >\n            <Image\n              source={require('../assets/comment.png')}\n              style={styles.reactionIcon}\n              tintColor=\"#666\"\n              resizeMode=\"contain\"\n            />\n            <Text style={styles.reactionCount}>\n              {post.Comments}\n            </Text>\n          </TouchableOpacity>\n        </Animated.View>\n\n        {post.MyPost && (\n          <View style={styles.myPostBadge}>\n            <Text style={styles.myPostText}>Мой пост</Text>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  userInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  avatarContainer: {\n    width: 40,\n    height: 40,\n    marginRight: 10,\n    borderRadius: 20,\n    overflow: 'hidden',\n    backgroundColor: '#f0f0f0',\n  },\n  avatar: {\n    width: '100%',\n    height: '100%',\n  },\n  userTextInfo: {\n    flex: 1,\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#000',\n  },\n  verifiedBadge: {\n    width: 16,\n    height: 16,\n    marginLeft: 1,\n  },\n  username: {\n    fontSize: 14,\n    color: '#666',\n  },\n  date: {\n    fontSize: 12,\n    color: '#666',\n  },\n  text: {\n    fontSize: 16,\n    color: '#000',\n    marginBottom: 10,\n    lineHeight: 22,\n  },\n  mediaContainer: {\n    width: '100%',\n    backgroundColor: '#000',\n    borderRadius: 10,\n    overflow: 'hidden',\n    marginVertical: 5,\n  },\n  mediaContent: {\n    width: '100%',\n    height: '100%',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.9)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  fullScreenMedia: {\n    width: '100%',\n    height: '100%',\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 40,\n    right: 20,\n    zIndex: 2,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    color: '#fff',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  downloadButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 40,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    borderRadius: 25,\n    padding: 12,\n    zIndex: 1,\n  },\n  downloadIcon: {\n    width: 24,\n    height: 24,\n    tintColor: '#fff',\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  reactions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    gap: 20,\n  },\n  reactionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n    borderRadius: 20,\n    backgroundColor: '#f8f8f8',\n  },\n  reactionButtonActive: {\n    backgroundColor: '#E3F2FD',\n  },\n  dislikeButtonActive: {\n    backgroundColor: '#FFE5E5',\n  },\n  reactionIcon: {\n    width: 24,\n    height: 24,\n  },\n  reactionIconActive: {\n    tintColor: '#007AFF',\n  },\n  dislikeIconActive: {\n    tintColor: '#FF3B30',\n  },\n  reactionCount: {\n    fontSize: 15,\n    fontWeight: '600',\n    color: '#666',\n    marginLeft: 6,\n  },\n  reactionCountActive: {\n    color: '#007AFF',\n  },\n  dislikeCountActive: {\n    color: '#FF3B30',\n  },\n  reactionLoader: {\n    marginLeft: 4,\n  },\n  pointerEventsAuto: {\n    pointerEvents: 'auto',\n  },\n  pointerEventsNone: {\n    pointerEvents: 'none',\n  },\n  myPostBadge: {\n    backgroundColor: '#E3F2FD',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  myPostText: {\n    fontSize: 12,\n    color: '#007AFF',\n    fontWeight: '500',\n  },\n  videoOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n    padding: 10,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n  },\n});\n\nexport default PostCard;\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport {\n  View,\n  FlatList,\n  StyleSheet,\n  RefreshControl,\n  ActivityIndicator,\n  Text,\n  TouchableOpacity,\n  Animated,\n  Platform,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../navigation/types';\nimport { PostResponse, postsAPI } from '../services/api';\nimport PostCard from '../components/PostCard';\nimport { AuthContext } from '../navigation';\n\ntype FeedType = 'LATEST' | 'REC' | 'SUBSCRIPTIONS';\ntype FeedScreenNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst POSTS_PER_PAGE = 25;\nconst RETRY_INTERVAL = 5000;\n\nconst FeedScreen = () => {\n  const navigation = useNavigation<FeedScreenNavigationProp>();\n  const [feedType, setFeedType] = useState<FeedType>('LATEST');\n  const [posts, setPosts] = useState<PostResponse[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [hasMorePosts, setHasMorePosts] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const retryTimeoutRef = useRef<NodeJS.Timeout>();\n  const pageRef = useRef(0);\n  \n  // Animation values\n  const loadingOpacity = useRef(new Animated.Value(0)).current;\n  const contentOpacity = useRef(new Animated.Value(1)).current;\n\n  const { logout } = React.useContext(AuthContext);\n\n  useEffect(() => {\n    return () => {\n      if (retryTimeoutRef.current) {\n        clearTimeout(retryTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const animateLoading = useCallback((show: boolean) => {\n    Animated.parallel([\n      Animated.timing(loadingOpacity, {\n        toValue: show ? 1 : 0,\n        duration: 200,\n        useNativeDriver: false,\n      }),\n      Animated.timing(contentOpacity, {\n        toValue: show ? 0.3 : 1,\n        duration: 200,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, []);\n\n  const handleLogin = useCallback(async () => {\n    if (retryTimeoutRef.current) {\n      clearTimeout(retryTimeoutRef.current);\n    }\n    try {\n      // Используем logout из контекста, который удалит токен и обновит состояние\n      await logout();\n      \n      // Очищаем локальные данные\n      setPosts([]);\n      setError(null);\n      setLoading(false);\n      setRefreshing(false);\n      setLoadingMore(false);\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  }, [logout]);\n\n  const fetchPosts = useCallback(async (refresh = false) => {\n    try {\n      if (!refresh && loadingMore) return;\n\n      const startIndex = refresh ? 0 : pageRef.current * POSTS_PER_PAGE;\n      console.log('Fetching posts:', { feedType, startIndex, refresh });\n\n      if (refresh) {\n        setLoading(true);\n        pageRef.current = 0;\n        // Показываем анимацию загрузки только если нет ошибки и не идет pull-to-refresh\n        if (!error && !refreshing) {\n          animateLoading(true);\n        }\n      } else {\n        setLoadingMore(true);\n      }\n\n      const newPosts = await postsAPI.getPosts(feedType, startIndex);\n      console.log('Received posts:', newPosts.length);\n      \n      // Если в LATEST нет постов - это ошибка\n      if (feedType === 'LATEST' && newPosts.length === 0 && startIndex === 0) {\n        throw new Error('Не удалось загрузить ленту');\n      }\n      \n      if (refresh) {\n        setPosts(newPosts);\n      } else {\n        setPosts(prev => [...prev, ...newPosts]);\n      }\n      \n      setHasMorePosts(newPosts.length === POSTS_PER_PAGE);\n      if (newPosts.length === POSTS_PER_PAGE) {\n        pageRef.current += 1;\n      }\n      setError(null);\n\n      if (retryTimeoutRef.current) {\n        clearTimeout(retryTimeoutRef.current);\n      }\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      setError('Ошибка загрузки постов\\n\\nПопробуйте войти еще раз, перезагрузить страницу или использовать VPN');\n      \n      // Продолжаем попытки загрузки только для LATEST с увеличивающейся задержкой\n      if (feedType === 'LATEST') {\n        if (retryTimeoutRef.current) {\n          clearTimeout(retryTimeoutRef.current);\n        }\n        // Добавляем небольшую случайную задержку чтобы избежать синхронизации запросов\n        const delay = RETRY_INTERVAL + Math.random() * 1000;\n        retryTimeoutRef.current = setTimeout(() => {\n          fetchPosts(true);\n        }, delay);\n      }\n    } finally {\n      // Убираем анимацию загрузки только если нет ошибки и не идет pull-to-refresh\n      if (!error && !refreshing) {\n        animateLoading(false);\n      }\n      setLoading(false);\n      setRefreshing(false);\n      setLoadingMore(false);\n    }\n  }, [feedType, loadingMore, error, refreshing]);\n\n  const updateSinglePost = useCallback(async (postId: string) => {\n    try {\n      const updatedPost = await postsAPI.loadPost(postId);\n      setPosts(prevPosts => \n        prevPosts.map(post => \n          post.ID === postId ? updatedPost : post\n        )\n      );\n    } catch (error) {\n      console.error('Error updating post:', error);\n    }\n  }, []);\n\n  // Load initial posts\n  useEffect(() => {\n    fetchPosts(true);\n  }, [feedType]);\n\n  const handleRefresh = useCallback(() => {\n    console.log('Refreshing posts...');\n    setRefreshing(true);\n    fetchPosts(true);\n  }, [fetchPosts]);\n\n  const handleLoadMore = useCallback(() => {\n    console.log('Loading more posts...');\n    if (hasMorePosts && !loadingMore && !refreshing) {\n      fetchPosts(false);\n    }\n  }, [hasMorePosts, loadingMore, refreshing, fetchPosts]);\n\n  const handleChangeFeedType = useCallback((type: FeedType) => {\n    if (type === feedType) return;\n    if (retryTimeoutRef.current) {\n      clearTimeout(retryTimeoutRef.current);\n    }\n    console.log('Changing feed type to:', type);\n    setPosts([]);\n    setHasMorePosts(true);\n    pageRef.current = 0;\n    setFeedType(type);\n  }, [feedType]);\n\n  const renderPost = useCallback(({ item }: { item: PostResponse }) => {\n    return (\n      <PostCard\n        post={item}\n        onUpdate={() => updateSinglePost(item.ID)}\n      />\n    );\n  }, [updateSinglePost]);\n\n  const renderHeader = useCallback(() => (\n    <View style={styles.feedTypeContainer}>\n      <TouchableOpacity\n        style={[styles.feedTypeButton, feedType === 'LATEST' && styles.activeFeedType]}\n        onPress={() => handleChangeFeedType('LATEST')}\n      >\n        <Text style={[styles.feedTypeText, feedType === 'LATEST' && styles.activeFeedTypeText]}>\n          Новые\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={[styles.feedTypeButton, feedType === 'REC' && styles.activeFeedType]}\n        onPress={() => handleChangeFeedType('REC')}\n      >\n        <Text style={[styles.feedTypeText, feedType === 'REC' && styles.activeFeedTypeText]}>\n          Рекомендации\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={[styles.feedTypeButton, feedType === 'SUBSCRIPTIONS' && styles.activeFeedType]}\n        onPress={() => handleChangeFeedType('SUBSCRIPTIONS')}\n      >\n        <Text style={[styles.feedTypeText, feedType === 'SUBSCRIPTIONS' && styles.activeFeedTypeText]}>\n          Подписки\n        </Text>\n      </TouchableOpacity>\n    </View>\n  ), [feedType, handleChangeFeedType]);\n\n  const renderError = useCallback(() => {\n    if (!error) return null;\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n        <TouchableOpacity style={styles.retryButton} onPress={() => fetchPosts(true)}>\n          <Text style={styles.retryButtonText}>Повторить</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n          <Text style={styles.loginButtonText}>Войти заново</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }, [error, handleLogin]);\n\n  const renderEmpty = useCallback(() => {\n    if (loading) return null;\n    return (\n      <View style={styles.emptyContainer}>\n        <Text style={styles.emptyText}>\n          {error ? '' : 'Нет постов'}\n        </Text>\n      </View>\n    );\n  }, [loading, error]);\n\n  const renderFooter = useCallback(() => {\n    if (!loadingMore) return null;\n    return (\n      <View style={styles.footer}>\n        <ActivityIndicator size=\"small\" color=\"#007AFF\" />\n      </View>\n    );\n  }, [loadingMore]);\n\n  if (loading && posts.length === 0) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {renderHeader()}\n      \n      <View style={styles.contentContainer}>\n        <Animated.View style={[\n          styles.loadingOverlay, \n          { \n            opacity: loadingOpacity,\n          },\n          loading ? styles.pointerEventsAuto : styles.pointerEventsNone\n        ]}>\n          <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n        </Animated.View>\n\n        <Animated.View style={[\n          styles.content, \n          { \n            opacity: contentOpacity,\n          },\n          loading ? styles.pointerEventsNone : styles.pointerEventsAuto\n        ]}>\n          <FlatList\n            data={posts}\n            renderItem={renderPost}\n            keyExtractor={item => `${feedType}_${item.ID}`}\n            onEndReached={handleLoadMore}\n            onEndReachedThreshold={0.5}\n            refreshControl={\n              <RefreshControl\n                refreshing={refreshing}\n                onRefresh={handleRefresh}\n                colors={['#007AFF']}\n                tintColor=\"#007AFF\"\n              />\n            }\n            ListEmptyComponent={renderEmpty}\n            ListFooterComponent={renderFooter}\n            contentContainerStyle={styles.listContent}\n          />\n        </Animated.View>\n      </View>\n\n      {renderError()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  contentContainer: {\n    flex: 1,\n    position: 'relative',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  feedTypeContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n    zIndex: 1,\n    ...Platform.select({\n      ios: {\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.1,\n        shadowRadius: 1,\n      },\n      android: {\n        elevation: 2,\n      },\n    }),\n  },\n  feedTypeButton: {\n    flex: 1,\n    paddingVertical: 8,\n    alignItems: 'center',\n    borderRadius: 20,\n    marginHorizontal: 4,\n  },\n  activeFeedType: {\n    backgroundColor: '#E3F2FD',\n  },\n  feedTypeText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#666',\n  },\n  activeFeedTypeText: {\n    color: '#007AFF',\n  },\n  content: {\n    flex: 1,\n  },\n  listContent: {\n    flexGrow: 1,\n  },\n  loadingOverlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  pointerEventsAuto: {\n    pointerEvents: 'auto',\n  },\n  pointerEventsNone: {\n    pointerEvents: 'none',\n  },\n  footer: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  errorContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    padding: 20,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n    alignItems: 'center',\n  },\n  errorText: {\n    fontSize: 14,\n    color: '#FF3B30',\n    textAlign: 'center',\n    marginBottom: 15,\n  },\n  retryButton: {\n    backgroundColor: '#007AFF',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    marginBottom: 10,\n  },\n  retryButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  loginButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n  },\n  loginButtonText: {\n    color: '#007AFF',\n    fontSize: 16,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#666',\n    textAlign: 'center',\n  },\n});\n\nexport default FeedScreen;\n","import React, { useEffect, useState, useContext } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n  Alert,\n  RefreshControl,\n  FlatList,\n  Linking,\n  Dimensions,\n} from 'react-native';\nimport { profileAPI, getImageUrl, postsAPI, ProfileData } from '../services/api';\nimport LetterAvatar from '../components/LetterAvatar';\nimport { AuthContext } from '../navigation';\nimport PostCard from '../components/PostCard';\nimport { PostResponse } from '../services/api';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst POSTS_PER_PAGE = 10;\nconst { width } = Dimensions.get('window');\n\ninterface ProfileScreenProps {\n  username?: string; // Опциональный, если не передан - показываем свой профиль\n}\n\nconst ProfileScreen: React.FC<ProfileScreenProps> = ({ username = 'KiriXDev' }) => {\n  const { logout } = useContext(AuthContext);\n  const [profile, setProfile] = useState<ProfileData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(null);\n  const [coverUrl, setCoverUrl] = useState<string | null>(null);\n  const [iconUrls, setIconUrls] = useState<string[]>([]);\n  const [posts, setPosts] = useState<PostResponse[]>([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n  const [hasMorePosts, setHasMorePosts] = useState(true);\n\n  useEffect(() => {\n    fetchProfile();\n  }, [username]);\n\n  const loadIcons = async (icons: string[]) => {\n    const loadedUrls: string[] = [];\n    for (const icon of icons) {\n      try {\n        const url = await getImageUrl(icon);\n        loadedUrls.push(url);\n      } catch (error) {\n        console.error('Error loading icon:', error);\n      }\n    }\n    setIconUrls(loadedUrls);\n  };\n\n  const fetchProfile = async () => {\n    try {\n      setLoading(true);\n      const data = username ? \n        await profileAPI.getProfile(username) : \n        await profileAPI.getMyProfile();\n      setProfile(data);\n      \n      if (data.avatar && data.avatar !== 'None') {\n        try {\n          const url = await getImageUrl(data.avatar);\n          setAvatarUrl(url);\n        } catch (error) {\n          console.error('Error loading avatar:', error);\n        }\n      }\n\n      if (data.cover && data.cover !== 'None') {\n        try {\n          const url = await getImageUrl(data.cover);\n          setCoverUrl(url);\n        } catch (error) {\n          console.error('Error loading cover:', error);\n        }\n      }\n\n      if (data.icons && data.icons.length > 0) {\n        loadIcons(data.icons);\n      }\n      \n      if (data.id) {\n        fetchUserPosts(true);\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      Alert.alert(\n        'Ошибка',\n        'Не удалось загрузить профиль. Проверьте подключение к интернету или попробуйте войти заново.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchUserPosts = async (refresh = false) => {\n    if (!profile?.id || (!refresh && loadingPosts)) return;\n\n    try {\n      setLoadingPosts(true);\n      const startIndex = refresh ? 0 : posts.length;\n      const newPosts = await postsAPI.getUserPosts(profile.id.toString(), startIndex);\n      \n      if (refresh) {\n        setPosts(newPosts);\n      } else {\n        setPosts(prev => [...prev, ...newPosts]);\n      }\n      \n      setHasMorePosts(newPosts.length === POSTS_PER_PAGE);\n    } catch (error) {\n      console.error('Error fetching user posts:', error);\n      Alert.alert('Ошибка', 'Не удалось загрузить посты');\n    } finally {\n      setLoadingPosts(false);\n      setRefreshing(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    setRefreshing(true);\n    fetchProfile();\n  };\n\n  const handleLoadMore = () => {\n    if (hasMorePosts && !loadingPosts) {\n      fetchUserPosts();\n    }\n  };\n\n  const handlePostUpdate = () => {\n    fetchUserPosts(true);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n    } catch (error) {\n      console.error('Error logging out:', error);\n      Alert.alert('Ошибка', 'Не удалось выйти из аккаунта');\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.centered}>\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n      </View>\n    );\n  }\n\n  if (!profile) {\n    return (\n      <View style={styles.centered}>\n        <Text>Не удалось загрузить профиль</Text>\n      </View>\n    );\n  }\n\n  const renderPost = ({ item }: { item: PostResponse }) => (\n    <PostCard post={item} onUpdate={handlePostUpdate} />\n  );\n\n  const renderFooter = () => {\n    if (!loadingPosts) return null;\n    return (\n      <View style={styles.footer}>\n        <ActivityIndicator size=\"small\" color=\"#007AFF\" />\n      </View>\n    );\n  };\n\n  const renderStats = () => {\n    const stats = [\n      { label: 'Посты', value: profile.posts },\n      { label: 'Подписчики', value: profile.subscribers },\n      { label: 'Подписки', value: profile.subscriptions }\n    ];\n\n    return (\n      <View style={styles.stats}>\n        {stats.map((stat, index) => (\n          <View key={stat.label} style={styles.statItem}>\n            <Text style={styles.statNumber}>\n              {stat.value?.toLocaleString() || '0'}\n            </Text>\n            <Text style={styles.statLabel}>{stat.label}</Text>\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const renderHeader = () => (\n    <View style={styles.headerContainer}>\n      {/* Cover Image */}\n      <View style={styles.coverContainer}>\n        {coverUrl ? (\n          <Image \n            source={{ uri: coverUrl }}\n            style={styles.coverImage}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <View style={[styles.coverImage, styles.defaultCover]} />\n        )}\n      </View>\n\n      {/* Profile Info */}\n      <View style={styles.profileInfo}>\n        <View style={styles.avatarWrapper}>\n          {avatarUrl ? (\n            <Image \n              source={{ uri: avatarUrl }}\n              style={styles.avatar}\n            />\n          ) : (\n            <LetterAvatar \n              name={profile?.name || profile?.username || 'Пользователь'} \n              size={100}\n            />\n          )}\n        </View>\n\n        <View style={styles.nameContainer}>\n          <Text style={styles.name}>{profile?.name || 'Без имени'}</Text>\n          <Text style={styles.username}>@{profile?.username}</Text>\n          {profile?.description && (\n            <Text style={styles.description}>{profile.description}</Text>\n          )}\n        </View>\n\n        {renderStats()}\n\n        {profile?.my_profile && (\n          <View style={styles.profileButtons}>\n            <TouchableOpacity \n              style={styles.editButton}\n              onPress={() => {/* Add edit profile navigation */}}\n            >\n              <Text style={styles.editButtonText}>Редактировать профиль</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n              style={[styles.editButton, styles.logoutButton]}\n              onPress={handleLogout}\n            >\n              <Icon name=\"logout\" size={20} color=\"#fff\" />\n              <Text style={styles.editButtonText}>Выйти</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n\n        {profile?.icons && profile.icons.length > 0 && (\n          <View style={styles.iconsContainer}>\n            {iconUrls.map((iconUrl, index) => (\n              <Image \n                key={index}\n                source={{ uri: iconUrl }}\n                style={styles.icon}\n              />\n            ))}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={posts}\n        renderItem={renderPost}\n        keyExtractor={item => item.ID}\n        onEndReached={handleLoadMore}\n        onEndReachedThreshold={0.5}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={handleRefresh} />\n        }\n        ListHeaderComponent={renderHeader}\n        ListFooterComponent={renderFooter}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerContainer: {\n    width: '100%',\n  },\n  coverContainer: {\n    width: '100%',\n    height: 200,\n    backgroundColor: '#f0f0f0',\n  },\n  coverImage: {\n    width: '100%',\n    height: 200,\n  },\n  defaultCover: {\n    backgroundColor: '#e1e1e1',\n  },\n  profileInfo: {\n    padding: 15,\n    marginTop: -50,\n  },\n  avatarWrapper: {\n    marginBottom: 10,\n    alignItems: 'center',\n  },\n  avatar: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    borderWidth: 4,\n    borderColor: '#fff',\n  },\n  nameContainer: {\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 4,\n  },\n  username: {\n    fontSize: 16,\n    color: '#666',\n    marginBottom: 8,\n  },\n  description: {\n    fontSize: 14,\n    color: '#444',\n    textAlign: 'center',\n    paddingHorizontal: 20,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingVertical: 15,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#eee',\n    marginVertical: 15,\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statNumber: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4,\n  },\n  editButton: {\n    backgroundColor: '#007AFF',\n    paddingVertical: 8,\n    paddingHorizontal: 20,\n    borderRadius: 20,\n    alignSelf: 'center',\n    marginBottom: 15,\n  },\n  editButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 5,\n  },\n  profileButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    paddingHorizontal: 15,\n    width: '100%',\n  },\n  logoutButton: {\n    backgroundColor: '#ff3b30',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    marginTop: 10,\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginHorizontal: 4,\n  },\n  footer: {\n    padding: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default ProfileScreen;\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoginScreen from '../screens/LoginScreen';\nimport FeedScreen from '../screens/FeedScreen';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator();\n\n// Create auth context\nexport const AuthContext = createContext<{\n  isLoggedIn: boolean;\n  setIsLoggedIn: (value: boolean) => void;\n  logout: () => Promise<void>;\n}>({\n  isLoggedIn: false,\n  setIsLoggedIn: () => {},\n  logout: async () => {},\n});\n\nconst MainTabs = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        tabBarActiveTintColor: '#007AFF',\n        tabBarInactiveTintColor: '#8E8E93',\n        tabBarStyle: {\n          backgroundColor: '#FFFFFF',\n          borderTopWidth: 1,\n          borderTopColor: '#E5E5EA',\n        },\n        headerStyle: {\n          backgroundColor: '#FFFFFF',\n        },\n        headerTitleStyle: {\n          color: '#000000',\n          fontSize: 17,\n          fontWeight: '600',\n        },\n      }}\n    >\n      <Tab.Screen\n        name=\"Feed\"\n        component={FeedScreen}\n        options={{\n          title: 'Главная',\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"home-outline\" size={size} color={color} />\n          ),\n          headerTitle: 'Главная',\n        }}\n      />\n      <Tab.Screen\n        name=\"Profile\"\n        component={ProfileScreen}\n        options={({ navigation }) => ({\n          title: 'Мой профиль',\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"person-outline\" size={size} color={color} />\n          ),\n          headerTitle: 'Мой профиль',\n          headerRight: () => {\n            const { logout } = useContext(AuthContext);\n            return (\n              <Ionicons\n                name=\"log-out-outline\"\n                size={24}\n                color=\"#ff3b30\"\n                style={{ marginRight: 15 }}\n                onPress={logout}\n              />\n            );\n          },\n        })}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst Navigation = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n\n  const checkLoginStatus = async () => {\n    const sKey = await AsyncStorage.getItem('S-KEY');\n    setIsLoggedIn(!!sKey);\n  };\n\n  const logout = async () => {\n    await AsyncStorage.removeItem('S-KEY');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn, logout }}>\n      <NavigationContainer>\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          {!isLoggedIn ? (\n            <Stack.Screen name=\"Auth\" component={LoginScreen} />\n          ) : (\n            <Stack.Screen name=\"Main\" component={MainTabs} />\n          )}\n        </Stack.Navigator>\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n};\n\nexport default Navigation;\n","import './src/utils/disableWarnings';\nimport React, { useCallback } from 'react';\nimport Navigation from './src/navigation';\nimport { StatusBar } from 'expo-status-bar';\nimport { View, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const renderNavigation = useCallback(() => <Navigation />, []);\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      {renderNavigation()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","const originalConsoleError = console.error;\n\nconsole.error = (...args: any[]) => {\n  if (args[0]?.includes?.('Warning: Encountered two children with the same key')) {\n    return;\n  }\n  originalConsoleError.apply(console, args);\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/KirixElemClient/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [30], () => (__webpack_require__(4103)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["authApi","axios","create","baseURL","headers","postsApi","interceptors","request","use","async","sKey","AsyncStorage","getItem","config","response","console","error","data","message","status","removeItem","Promise","reject","getImageUrl","path","authAPI","email","password","formData","FormData","append","post","profileAPI","getProfile","username","Error","getMyProfile","get","updateProfile","Object","entries","forEach","key","value","undefined","String","uploadAvatar","file","uploadCover","postsAPI","postId","type","startIndex","toString","url","log","StartIndex","postsArray","Array","isArray","length","map","ID","AuthorID","Username","Name","Avatar","UserIcons","Text","Content","Date","Likes","Number","Dislikes","Liked","Disliked","Comments","MyPost","Boolean","isAxiosError","userId","posts","action","styles","StyleSheet","container","flex","justifyContent","padding","backgroundColor","title","fontSize","fontWeight","marginBottom","textAlign","input","assign","height","borderWidth","borderColor","borderRadius","paddingHorizontal","outlineStyle","buttonContainer","pointerEvents","button","alignItems","cursor","buttonDisabled","buttonText","color","LoginScreen","useNavigation","setIsLoggedIn","useContext","AuthContext","setEmail","useState","setPassword","loading","setLoading","_jsxs","View","style","children","_jsx","TextInput","placeholder","onChangeText","autoCapitalize","keyboardType","editable","secureTextEntry","TouchableOpacity","onPress","test","trim","S_KEY","setItem","Alert","alert","disabled","ActivityIndicator","colorPairs","bg","text","LetterAvatar","name","size","letter","charAt","toUpperCase","colorIndex","Math","abs","split","reduce","acc","char","charCodeAt","colors","width","overflow","textAlignVertical","borderBottomWidth","borderBottomColor","header","flexDirection","userInfo","avatarContainer","marginRight","avatar","userTextInfo","nameContainer","gap","verifiedBadge","marginLeft","date","lineHeight","mediaContainer","marginVertical","mediaContent","modalOverlay","modalContent","fullScreenMedia","closeButton","position","top","right","zIndex","closeButtonText","downloadButton","bottom","downloadIcon","tintColor","footer","reactions","reactionButton","reactionButtonActive","dislikeButtonActive","reactionIcon","reactionIconActive","dislikeIconActive","reactionCount","reactionCountActive","dislikeCountActive","reactionLoader","pointerEventsAuto","pointerEventsNone","myPostBadge","paddingVertical","myPostText","videoOverlay","left","PostCard","onUpdate","loadingAction","setLoadingAction","localLikes","setLocalLikes","localDislikes","setLocalDislikes","localLiked","setLocalLiked","localDisliked","setLocalDisliked","avatarUrl","setAvatarUrl","scaleAnim","Animated","Value","modalVisible","setModalVisible","fadeAnim","useRef","current","mediaViewerProps","setMediaViewerProps","videoRef","handleDownload","filename","a","document","createElement","href","download","body","appendChild","click","removeChild","openModal","props","timing","toValue","duration","useNativeDriver","start","closeModal","formatDate","useCallback","dateString","format","locale","ru","handleInteraction","prev","handleReactionPress","sequence","spring","friction","useEffect","loadAvatar","Image","source","uri","includes","require","renderMediaContent","content","JSON","parse","screenWidth","Dimensions","imageHeight","maxHeight","imageUrl","simple_image","file_name","orig_name","onClose","onDownload","min","resizeMode","Video","videoHeight","videoUrl","ref","ResizeMode","CONTAIN","useNativeControls","shouldPlay","isLooping","Modal","transparent","visible","onRequestClose","opacity","activeOpacity","transform","scale","contentContainer","loadingContainer","feedTypeContainer","feedTypeButton","marginHorizontal","activeFeedType","feedTypeText","activeFeedTypeText","listContent","flexGrow","loadingOverlay","absoluteFillObject","errorContainer","borderTopWidth","borderTopColor","errorText","retryButton","retryButtonText","loginButton","loginButtonText","emptyContainer","emptyText","FeedScreen","feedType","setFeedType","setPosts","refreshing","setRefreshing","loadingMore","setLoadingMore","hasMorePosts","setHasMorePosts","setError","retryTimeoutRef","pageRef","loadingOpacity","contentOpacity","logout","React","clearTimeout","animateLoading","show","parallel","handleLogin","fetchPosts","refresh","newPosts","delay","random","setTimeout","updateSinglePost","updatedPost","prevPosts","handleRefresh","handleLoadMore","handleChangeFeedType","renderPost","item","renderHeader","renderError","renderEmpty","renderFooter","FlatList","renderItem","keyExtractor","onEndReached","onEndReachedThreshold","refreshControl","RefreshControl","onRefresh","ListEmptyComponent","ListFooterComponent","contentContainerStyle","centered","headerContainer","coverContainer","coverImage","defaultCover","profileInfo","marginTop","avatarWrapper","description","stats","statItem","statNumber","statLabel","editButton","alignSelf","editButtonText","profileButtons","logoutButton","iconsContainer","flexWrap","icon","ProfileScreen","profile","setProfile","coverUrl","setCoverUrl","iconUrls","setIconUrls","loadingPosts","setLoadingPosts","fetchProfile","cover","icons","loadedUrls","push","loadIcons","id","fetchUserPosts","handlePostUpdate","handleLogout","renderStats","label","subscribers","subscriptions","stat","index","toLocaleString","ListHeaderComponent","my_profile","Icon","iconUrl","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","createContext","isLoggedIn","MainTabs","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","headerStyle","headerTitleStyle","Screen","component","options","tabBarIcon","Ionicons","headerTitle","navigation","headerRight","Navigation","checkLoginStatus","Provider","NavigationContainer","headerShown","registerRootComponent","renderNavigation","StatusBar","originalConsoleError","args","apply","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}